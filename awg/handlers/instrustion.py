from aiogram import Router, F
from aiogram.types import Message, FSInputFile, CallbackQuery
from aiogram.filters import Command

from keyboard.menu import get_instruction_type

router = Router()


@router.callback_query(F.data == "instruction_iphone")
async def send_iphone_instruction(callback: CallbackQuery):
    if callback.bot is None:
        await callback.answer("–û—à–∏–±–∫–∞: –±–æ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.")
        return
    try:
        screenshots = [
            FSInputFile("media/iphone_step1.jpg"),  # –ù–∞–∂–∞—Ç—å –Ω–∞ —Ñ–∞–π–ª 123144.conf
            FSInputFile("media/iphone_step2.jpg"),  # –ù–∞–∂–∞—Ç—å "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è"
            FSInputFile("media/iphone_step3.jpg"),  # –ù–∞–∂–∞—Ç—å "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è"
            FSInputFile(
                "media/iphone_step4.jpg"
            ),  # –í—ã–±—Ä–∞—Ç—å "AmneziaWG" ‚Üí –ù–∞–∂–∞—Ç—å "–ü–æ–¥–∫–ª—é—á–∏—Ç—å"
        ]

        captions = [
            "üì± *–®–∞–≥ 1:* –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ñ–∞–π–ª `.conf`, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –ø–æ–ª—É—á–∏–ª–∏.",
            "üì§ *–®–∞–≥ 2:* –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É *¬´–ü–æ–¥–µ–ª–∏—Ç—å—Å—è¬ª*",
            "üì§ *–®–∞–≥ 3:* –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É *¬´–ü–æ–¥–µ–ª–∏—Ç—å—Å—è¬ª*, –∑–∞—Ç–µ–º ‚Äî *¬´–ï—â—ë¬ª (—Ç—Ä–∏ —Ç–æ—á–∫–∏)*.",
            "üÖ¶ *–®–∞–≥ 4:* –í—ã–±–µ—Ä–∏—Ç–µ *AmneziaWG* –∏–∑ —Å–ø–∏—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∏ –Ω–∞–∂–º–∏—Ç–µ *¬´–ü–æ–¥–∫–ª—é—á–∏—Ç—å¬ª*.",
        ]

        for i in range(len(screenshots)):
            if isinstance(callback.message, Message):
                await callback.message.answer_photo(
                    photo=screenshots[i], caption=captions[i], parse_mode="Markdown"
                )
            else:
                await callback.bot.send_photo(
                    chat_id=callback.from_user.id,
                    photo=screenshots[i],
                    caption=captions[i],
                    parse_mode="Markdown",
                )

    except Exception as e:
        await callback.answer(
            "‚ö† –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
        import logging

        logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏")


@router.callback_query(F.data == "instruction_android")
async def send_android_instruction(callback: CallbackQuery):
    if callback.bot is None:
        await callback.answer("–û—à–∏–±–∫–∞: –±–æ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.")
        return
    try:
        screenshots = [
            FSInputFile("media/android_step1.jpg"),  # –ù–∞–∂–∞—Ç—å –Ω–∞ —Ñ–∞–π–ª 123144.conf
            FSInputFile("media/android_step2.jpg"),  # –í—ã–±—Ä–∞—Ç—å "AmneziaWG"
            FSInputFile("media/android_step3.jpg"),  # –ù–∞–∂–∞—Ç—å "–ü–æ–¥–∫–ª—é—á–∏—Ç—å"
        ]

        captions = [
            "üì± *–®–∞–≥ 1:* –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ñ–∞–π–ª `.conf`, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –ø–æ–ª—É—á–∏–ª–∏.",
            "üÖ¶ *–®–∞–≥ 4:* –í—ã–±–µ—Ä–∏—Ç–µ *AmneziaVPN* –∏–∑ —Å–ø–∏—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
            "üåê –Ω–∞–∂–º–∏—Ç–µ *¬´–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è¬ª*.",
        ]

        for i in range(len(screenshots)):
            if isinstance(callback.message, Message):
                await callback.message.answer_photo(
                    photo=screenshots[i], caption=captions[i], parse_mode="Markdown"
                )
            else:
                await callback.bot.send_photo(
                    chat_id=callback.from_user.id,
                    photo=screenshots[i],
                    caption=captions[i],
                    parse_mode="Markdown",
                )

    except Exception as e:
        await callback.answer(
            "‚ö† –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
        import logging

        logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏")


@router.callback_query(F.data == "instructions")
async def show_instructions(callback: CallbackQuery):
    if isinstance(callback.message, Message) and callback.message.text:
        await callback.message.edit_text(
            text=(
                "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, —Å–Ω–∞—á–∞–ª–∞ —Å–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –∑–∞—Ç–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ. –ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≤–∞—à–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.\n\n"
                "–°—Å—ã–ª–∫–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è AmneziaVPN:\n"
                "üì± –ï—Å–ª–∏ —É –≤–∞—Å iPhone –∏–ª–∏ iPad ‚Äì —Å–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–¥–µ—Å—å: [App Store](https://apps.apple.com/ru/app/amneziawg/id6478942365)\n\n"
                "ü§ñ –ï—Å–ª–∏ —É –≤–∞—Å Android ‚Äì —Å–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–¥–µ—Å—å: [Google Play](https://play.google.com/store/apps/details?id=org.amnezia.vpn&hl=ru)\n\n"
                "–ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ."
            ),
            disable_web_page_preview=True,
            reply_markup=get_instruction_type(),
        )
    else:
        await callback.message.answer(
            "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, —Å–Ω–∞—á–∞–ª–∞ —Å–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –∑–∞—Ç–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ. –ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≤–∞—à–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.\n\n"
            "–°—Å—ã–ª–∫–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è AmneziaVPN:\n"
            "üì± –ï—Å–ª–∏ —É –≤–∞—Å iPhone –∏–ª–∏ iPad ‚Äì —Å–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–¥–µ—Å—å: [App Store](https://apps.apple.com/ru/app/amneziawg/id6478942365)\n\n"
            "ü§ñ –ï—Å–ª–∏ —É –≤–∞—Å Android ‚Äì —Å–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–¥–µ—Å—å: [Google Play](https://play.google.com/store/apps/details?id=org.amnezia.vpn&hl=ru)\n\n"
            "–ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.",
            reply_markup=get_instruction_type(),
            disable_web_page_preview=True,
        )
    await callback.answer()
